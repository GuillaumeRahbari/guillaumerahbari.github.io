{"version":3,"sources":["header/menu/Menu.jsx","header/Header.jsx","home/Home.jsx","about/About.jsx","App.js","serviceWorker.js","index.js","home/me.jpg"],"names":["Menu","_React$useState","React","useState","_React$useState2","Object","slicedToArray","open","setOpen","react_default","a","createElement","Fragment","IconButton_default","color","aria-label","onClick","index_es","icon","faBars","size","Drawer_default","onClose","List_default","style","width","ListItem_default","Button_default","component","Link","to","withTheme","props","styles","section","theme","palette","secondary","main","className","href","target","faTwitter","faFacebookF","faGithub","faEnvelope","primary","src","MyProfile","alt","About","App","BrowserRouter","src_header_Header","Route","exact","path","Home","Component","Boolean","window","location","hostname","match","createMuiTheme","ReactDOM","render","core_styles","src_App_0","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister","module","exports","__webpack_require__","p"],"mappings":"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","file":"static/js/main.e801ba5e.chunk.js","sourcesContent":["import React from 'react';\nimport { Link } from 'react-router-dom';\nimport Drawer from '@material-ui/core/Drawer';\nimport List from '@material-ui/core/List';\nimport ListItem from '@material-ui/core/ListItem';\nimport IconButton from '@material-ui/core/IconButton';\nimport Button from '@material-ui/core/Button';\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome';\nimport { faBars } from '@fortawesome/free-solid-svg-icons';\n\nexport default function Menu() {\n  const [open, setOpen] = React.useState(false);\n\n  return (\n    <>\n      <IconButton\n        color={'inherit'}\n        aria-label=\"Menu\"\n        onClick={() => setOpen(true)}\n      >\n        <FontAwesomeIcon icon={faBars} size={'lg'} />\n      </IconButton>\n      <Drawer open={open} onClose={() => setOpen(false)}>\n        <List style={{ width: 250 }}>\n          <ListItem>\n            <Button component={Link} to=\"/\">\n              Home\n            </Button>\n          </ListItem>\n          <ListItem>\n            <Button component={Link} to=\"/about\">\n              About Me\n            </Button>\n          </ListItem>\n        </List>\n      </Drawer>\n    </>\n  );\n}\n","import React from 'react';\nimport { withTheme } from '@material-ui/core/styles';\nimport IconButton from '@material-ui/core/IconButton';\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome';\nimport { faEnvelope } from '@fortawesome/free-solid-svg-icons';\nimport {\n  faGithub,\n  faFacebookF,\n  faTwitter,\n} from '@fortawesome/free-brands-svg-icons';\nimport { Menu } from './menu';\nimport './Header.css';\n\nexport default withTheme()(function Header(props) {\n  const { theme } = props;\n  const secondaryColor = theme.palette.secondary;\n\n  const styles = {\n    section: {\n      color: secondaryColor.main,\n    },\n  };\n\n  return (\n    <section className={'app-header'} style={styles.section}>\n      <div className={'app-header__menu'}>\n        <Menu />\n      </div>\n      <div className={'app-header__socials'}>\n        <IconButton\n          color={'inherit'}\n          component={'a'}\n          href={''}\n          target={'_blank'}\n          aria-label=\"Go to the twitter page of Guillaume Rahbari (new window)\"\n        >\n          <FontAwesomeIcon icon={faTwitter} size={'lg'} />\n        </IconButton>\n        <IconButton\n          color={'inherit'}\n          component={'a'}\n          href={''}\n          target={'_blank'}\n          aria-label=\"Go to the facebook page of Guillaume Rahbari (new window)\"\n        >\n          <FontAwesomeIcon icon={faFacebookF} size={'lg'} />\n        </IconButton>\n        <IconButton\n          color={'inherit'}\n          component={'a'}\n          href={''}\n          target={'_blank'}\n          aria-label=\"Go to the github page of Guillaume Rahbari (new window)\"\n        >\n          <FontAwesomeIcon icon={faGithub} size={'lg'} />\n        </IconButton>\n        <IconButton\n          color={'inherit'}\n          component={'a'}\n          href={'mailto:guillaume.rahbari@gmail.com'}\n          aria-label=\"Send an email to Guillaume Rahbari\"\n        >\n          <FontAwesomeIcon icon={faEnvelope} size={'lg'} />\n        </IconButton>\n      </div>\n    </section>\n  );\n});\n","import React from 'react';\nimport { withTheme } from '@material-ui/core/styles';\nimport MyProfile from './me.jpg';\nimport './Home.css';\n\nexport default withTheme()(function Home(props) {\n  const { theme } = props;\n  const primaryColor = theme.palette.primary;\n\n  const styles = {\n    section: {\n      color: primaryColor.main,\n    },\n  };\n  return (\n    <section className={'section-container'} style={styles.section}>\n      <h1 className={'title'}>Full-stack Javascript Lead tech</h1>\n      <h2>\n        I design and code beautifully simple things, and I love what I do.\n      </h2>\n      <div className={'app-home__avatar'}>\n        <img\n          src={MyProfile}\n          alt={'Guillaume Rahbari avatar'}\n          className={'app-home__avatar-img'}\n        />\n      </div>\n    </section>\n  );\n});\n","import React from 'react';\n\nexport default function About() {\n  return <section>About me</section>;\n}\n","import React, { Component } from 'react';\nimport { BrowserRouter as Router, Route } from 'react-router-dom';\nimport { Header } from './header';\nimport { Home } from './home';\nimport { About } from './about';\nimport './App.css';\n\nclass App extends Component {\n  render() {\n    return (\n      <Router>\n        <div className=\"App\">\n          <Header />\n          <Route exact path=\"/\" component={Home} />\n          <Route path=\"/about\" component={About} />\n        </div>\n      </Router>\n    );\n  }\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read http://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit http://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See http://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport { createMuiTheme, MuiThemeProvider } from '@material-ui/core/styles';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nconst theme = createMuiTheme({\n  palette: {\n    primary: {\n      main: '#293347',\n    },\n    secondary: {\n      main: '#448aff',\n    },\n  },\n});\n\nReactDOM.render(\n  <MuiThemeProvider theme={theme}>\n    <App />\n  </MuiThemeProvider>,\n  document.getElementById('root')\n);\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: http://bit.ly/CRA-PWA\nserviceWorker.unregister();\n","module.exports = __webpack_public_path__ + \"static/media/me.320bdc69.jpg\";"],"sourceRoot":""}